NO MOUSE ALLOWED
VERB NOUN relationship

Why should you care. VIM is cross platform and is installed on almost all web servers.
Good for your health. Reduces wrist pains. (I've been in physical therapy twice in my career and keeping finders on the keyboards helps


These movement already will make you a more productive than another editor. Also the wrist cramps do away.

-------------------------------------------------------------------------
Visual Block Mode
-------------------------------------------------------------------------
Cntrl+v then use the following keys to select hjklv
-------------------------------------------------------------------------
-------------------------------------------------------------------------
-------------------------------------------------------------------------
JUMP BETWEEN CHUNKS OF CODE > FUNCTIONS > ETC This section work in progress
-------------------------------------------------------------------------
-------------------------------------------------------------------------



But it is how you enter insert mode that offers some advantage:

i	insert before character under cursor
I   insert at first character on line
s   delete character and instert in character space.
S   delete line and insert at the begging of the line

a	insert after cursor
I	insert at beginning of current line
a   instert mode after character
A	insert at end of the line
o	starts insert mode in a new line below current one
O	insert in a new line above current one

Insert keys:
iIsSaAoOC

daw - delete word under cursor
daW - delete WORD under cursor

You can also enter insert mode by replacing existing text at the same time:

ciw	("change inner word") change word under cursor
ci"	change double-quoted string (but keep the quotes)
ci(	change text between matching parentheses, also works with brackets
cc	change whole line::
------------
Command mode
-------------
gg  top of file
G   Bottom of file
u - Undo
U - Undo all since last write
Cntrl+r - Redo
:set spell - turn on and off spell check
Visual Mode

Spelling:
Turn spelling on = :set spell
]s - next spelling error
[s - prev spelling error
z= - spelling suggestions


iabbr email design@jpmcgarrity.com
iabbr funct function(){}
iabbr ture true
iabbr flase false

-------------------------------------------------
MACRO
|________________________________________________
How to create macros
You hit q to record and then q again to stop in normal mode
To run the macro you hit @ and then the key mapped to the macro
See you macros by typing :reg or :register
You can modify the register by using a :let command.

When recording you should bind to a key:
1q then q to end
10@1 to run the macro 10 times.

Writing a macro to reg like this
:let @a=whateveryouwantthemacrotobe

hit q to go into macro mode.

Example: qa <- this sets the registry to a.
Do something.
Then hit q again to end the recording. This will work in any mode with anything. insert visual command tab etc... its sick kid!

TO execute the macro you hit the @ key.
Example @a = @theRegister you saved the macro in.

To execture the macro more than once you can type 4@a to run the macro 4 times.

When making macros you should visualize how the macro will. you need to be procsise with how the 

You can also open registers and modify them.

To edit your macro you type :reg

Also you can copy one macro to another register. something like this: :let @a = @c

-------------------------------------------------
Plungins
|________________________________________________

vundle
pathogen

The above are more or less manditory to install if you want to install other plugins
So you drop git repos into your bundle and then thats it.

The proper method with git is to use the submodule instead of clone. This way you only pull the latest from the head of the git head.
Example: cd ~/.vim/plugins && git submodule gitXYZ

OTHER GREAT PLUGINS
NERDTree <- this allows you to have a project/home directory and also allows you to copy and modify files in an easier method. SUDO IDE
<leader .N might be a good method to open NERDTree but there might be another method.

EasyMotion
Will mask your search with the letters that will take you where you want to go.

Powerline
Pimps out the bottom line of your VIM. There are settings for this that i think go into the rc file

Fugitive
Actived by the :G then you will see the list of the commands.


CntrlP
Search utility

Running list of Links
http://rayninfo.co.uk/vimtips.html
http://vim-adventures.com/
http://mislav.uniqpath.com/2011/12/vim-revisited/
http://bytefluent.com/vivify/ <- sweet color selection tool


------------------------------------------------------
VIMRC settings thts are useful 
------------------------------------------------------

Load external files into your rc file like bash to keep this in a psuedo module like format.

Example:
source ~/.vim/startup/commands.vim <- notice these need a .vim extension


---------------------------------------------------------
THINGS YOU NEED TO LEARN
---------------------------------------------------------
~  - switch case
~g - NOT SURE
%  - 
< - shift left
> - shift right

Code Folding
zf - hide code 
za - show code
zR - show all hidden

Math
"=5*5<enter>p - 25
"=5/5<enter>p - 0
"=5+5<enter>p - 10


Deletes:
---------------------------------------------------------

dap - delete paragraph
viw - select inner word


ClipBoard:
---------------------------------------------------------
y  - yank
yy - yankline
"*y - copy to system keyboard on osx - (ANNOYING)

---------------------------------------------------------
---------------------------------------------------------

Tabbing and opening files:
---------------------------------------------------------

PLUGINS INFO
---------------------------------------------------------
NERDTree
snippets

---------------------------------------------------------
---------------------------------------------------------
---------------------------------------------------------
---------------------------------------------------------
---------------------------------------------------------
---------------------------------------------------------

Code Settings
[{ - Jump to the begining of a code block.
]} - Jump to end of code block

[( - Jump to next paran
]) - Jump to prev param
 
The above two commands will work from anywhere inside the code block.

Use the [( command.

To jump to the end of a C code block (while, switch, if etc), use the ]} command.

The above two commands will work from anywhere inside the code block.

To jump to the end of a C code block (while, switch, if etc), use the ]} command.

The above two commands will work from anywhere inside the code block.

To jump to the end of a parenthesis use the ]) command.
